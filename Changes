Revision history for Algorithm-QuineMcCluskey

"deAlias"
	2014-09-01
	- Start work on col_dom() -- Mostly carp stmts for now.
	  New (but not corrected) test hash for it in run03.t
	2014-08-20
	- No more default arguments (in the form of $self->get_primes())
	  for row_dom(), col_dom(), and purge_essentials(). Always
	  pass in the argument -- it's less confusing that way.
	- Trim Util.pm of tobits() -- it's embedded in BUILD now.
	- Make tests in 02run.t and 03run.t actually match what's
	  being tested. Still need to fix third test of 03run.t
	  though.
	- Former function remel is now method remel(), but I forgot
	  to add the $self-> before it everywhere.
	- Those parentheses around remel()'s arguments aren't optional
	  when we're pushing the limits of the parser. Added them.
	2014-08-19
	- More work in find_primes(). An array slice in a hash isn't
	  working as originally coded (I seem to recall the rules
	  changing some time ago). Changed it to two statements for
	  now.
	- Also comment changes in find_primes(), hopefully explaining
	  the prime implicant search more completely, and maybe better.
	2014-08-13
	- Many changes to attributes -- altered the internal
	  ones to have "init_arg=>undef" and read-only options,
	  and added accessor methods.
	- Moved the "keys %$primes" out of the loop in find_essentials().
	  I think this was done to keep the local variable count to a
	  minimum, but the downside is the repeated operation for each
	  loop.
	- In the same line, separated the map function from
	  the map-grep-grep chain. Again, the reason seems to be
	  to avoid storing a list in a variable, but the end result is
	  a baroque technique involving dereferencing anonymous references,
	  all to see if it's a one-element list or not.
	- Also in find_essentials(), set the essentials attribute in
	  one go with local hash set up in the loop, rather than setting
	  each key individually per loop in the attribute.
	- find_essentials() and purge_essentials no longer return
	  the ->ess hash (the only thing using this feature was
	  the test files). Use the accessor method get_essentials()
	  if you really want to see the internals.
	2014-08-01
	- Move maskmatch(), maskmatches(), and remel() from Util.pm
	  to QuineMcCluskey.pm and made them object methods. Function
	  maskmatch() uses what is now an attribute of the object,
	  and maskmatches() and remel() are up the method calling chain.
	2014-07-28
	- Backing off on the Bitstring Moose type idea. I may
	  revisit it, but right now it seems like too much for
	  something that can be achieved in block of code in
	  a BUILD method. Besides, it may make more sense to
	  re-write the code using these attributes with Bit::Vector
	  objects instead of strings.
	- 'width' is now a required field, the Moosey typing section
	  is deleted, and the BUILD method sets the bitstrings and
	  the title if they aren't provided.
	2014-07-07
	- After looking over the labeling in the run.t file, added
	  a new attribute, "title". We can now say what the A::QMcC
	  object actually represents.
	- Broke up run.t into five separate test files. The original
	  file was compact and in theory easy to add to, but I was
	  having trouble figuring out what was causing my Moose
	  errors. Plus, there were too many eval calls in the code.
	- The code originally changed the minterms, maxterms, and
	  dontcares fields from the passed-in decimal numbers into
	  bitstrings, and saved them in the original fields.  We
	  can't do that now, because Moose has set those fields to
	  types of 'ArrarRef[Int]' (or at least I did, and I'm not
	  inclined to back off on that yet).
	  So, set up three new fields that represent the three fields
	  in their bitstring form: min_bits, max_bits, and dc_bits.
	  Also added the new subtypes ('Bitstring' and
	  'ArrayRefOfBitstring') via Moose::Util::TypeConstraints.
	2014-04-30
	- Achieved a compile-error-free version using Moose instead
	  of Alias. Now to make it runtime-error-free.
	- As part of the compilation process, moved from a Makefile.PL
	  base (which was creating errors of its own) to Build.PL,
	  which Just Works.
	- Turned attribute boolean to a local variable (as I also did
	  with attributes imp and bits) as it was only used in a
	  single function.
	- Defined and made use of predicate functions for attributes
	  minterms, maxterms, and dontcares. Simplifies some sanity
	  checks.
	- Added methods allterms() and minmax_terms() to simplify
	  coding.
	- List::MoreUtils isn't actually being used in A::QMcC (it is
	  used in A::QMcC::Util though).
	- Continue correcting my use of Moose syntax.

	2013-10-25
	- Moosify ("has" declarations) the attributes. This is part
	  of the process to eliminate using Alias.pm.
	- Removed default value check in new(), which Moose has.
	- Removed prep_mopi call, which doesn't seem to exist anywhere.
	- De-attr'd the attributes in find_perms.

0.01	2006-06-24T21:32-0500
		First version, released on an unsuspecting world. Supports
		single-output problems only.

